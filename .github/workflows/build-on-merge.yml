name: Build and Deploy APIs
on:
  push:
    paths:
      - apps/**
      - libs/**
      - .github/workflows/build-on-merge-api.yml
      - package.json
      - package-lock.json
      - Dockerfile
    branches:
      - main

jobs:
  build-push-and-deploy:
    name: ⚙️ (${{ matrix.service }}) Build and Deploy
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service:
          [authentication, authorization, users]
    steps:
      - name: Check Out Repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 100
      - name: install jq
        run: sudo apt-get install jq
      - name: Check for Changes
        id: changes
        run: |
          echo HAS_CHANGES=$(git diff --quiet HEAD~$(echo '${{ toJson(github.event.commits.*.timestamp) }}' | jq '. | length') HEAD -- apps/${{ matrix.service }} libs/common .github/workflows package.json package-lock.json Dockerfile || echo $?) >> $GITHUB_OUTPUT
      - name: Get git Tag
        id: git_tag
        run: echo GIT_HASH=$(echo ${{ github.sha }} | cut -c 1-8) >> $GITHUB_OUTPUT
      - name: Cache Docker layers
        if: steps.changes.outputs.HAS_CHANGES == '1'
        uses: actions/cache@v3
        with:
          path: /tmp/${{ matrix.service }}/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      - name: Login to Docker
        if: steps.changes.outputs.HAS_CHANGES == '1'
        uses: docker/login-action@v2
        with:
          registry: ${{ secrets.DOCKER_REGISTRY_URL }}
          username: ${{ secrets.DOCKER_REGISTRY_USERNAME }}
          password: ${{ secrets.DOCKER_REGISTRY_PASSWORD }}
      - name: Set up Docker Buildx
        if: steps.changes.outputs.HAS_CHANGES == '1'
        id: buildx
        uses: docker/setup-buildx-action@v2
      - name: Build and push
        if: steps.changes.outputs.HAS_CHANGES == '1'
        id: docker_build
        uses: docker/build-push-action@v3
        with:
          context: ./
          file: ./Dockerfile
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          build-args: |
            APP_NAME=${{ matrix.service }}
            GIT_HASH=${{ steps.git_tag.outputs.GIT_HASH }}
            GIT_TAG=latest
          tags: ${{ secrets.DOCKER_REGISTRY_URL }}/${{ matrix.service }}:latest
          cache-from: type=local,src=/tmp/${{ matrix.service }}/.buildx-cache
          cache-to: type=local,dest=/tmp/${{ matrix.service }}/.buildx-cache-new,mode=max
      - name: Move cache
        if: steps.changes.outputs.HAS_CHANGES == '1'
        run: |
          rm -rf /tmp/${{ matrix.service }}/.buildx-cache
          mv /tmp/${{ matrix.service }}/.buildx-cache-new /tmp/${{ matrix.service }}/.buildx-cache
      - name: Image digest
        if: steps.changes.outputs.HAS_CHANGES == '1'
        run: echo ${{ steps.docker_build.outputs.digest }}
